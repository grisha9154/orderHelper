{"swagger":"2.0","info":{"title":"partner.accounts","version":"1.1.0","description":"API для работы со счетами"},"tags":[{"name":"accounts","description":"Сервис для работы со счетами"}],"paths":{"/":{"get":{"tags":["accounts"],"summary":"Список счетов","description":"Возвращает список счетов и остатков по ним","operationId":"getAccountList","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"$ref":"#/definitions/AccountListResponse"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":1,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/ \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/',\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/application/{format}":{"get":{"tags":["accounts"],"summary":"Печатная форма приложения к выписке","description":"Возвращает печатную форму приложения к выписке","operationId":"printApplication","produces":["application/json;charset=UTF-8","application/octet-stream","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/pdf"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"format","in":"path","description":"Формат печатной формы (docx, pdf)","required":true,"type":"string","pattern":"docx|pdf"},{"name":"printId","in":"query","description":"Идентификатор для печати приложения","required":true,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"type":"file"},"headers":{"Access-Control-Expose-Headers":{"type":"string","description":"Content-Disposition"},"Content-Disposition":{"type":"string","description":"attachment; filename=\"name\"; filename*=UTF-8''name"}}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":9,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/application/pdf?printId=<printId>' \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/application/pdf?printId=<printId>\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/application/pdf',\r\n  qs: { printId: '<printId>' },\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/application/pdf?printId=<printId>\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/statement":{"get":{"tags":["accounts"],"summary":"Выписка по счетам","description":"Возвращает список транзакций по одному либо нескольким счетам","operationId":"getStatement","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"number","in":"query","description":"Номера счетов","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi","maxItems":50,"minItems":0},{"name":"pageNo","in":"query","description":"Номер страницы (по умолчанию - 1, все транзакции - 0)","required":false,"type":"integer","minimum":0,"format":"int32"},{"name":"pageRowCount","in":"query","description":"Число строк на странице (по умолчанию - 50, все транзакции - 0)","required":false,"type":"integer","minimum":0,"format":"int32"},{"name":"dateFrom","in":"query","description":"Начальная дата периода (по умолчанию - (текущий день - месяц))","required":false,"type":"string","format":"date"},{"name":"dateTo","in":"query","description":"Конечная дата периода (по умолчанию - текущий день)","required":false,"type":"string","format":"date"},{"name":"transactions","in":"query","description":"Тип транзакции: 1 - операции зачисления (кредит), 2 - операции списания (дебет) (по умолчанию - 0 - все транзакции)","required":false,"type":"integer","format":"int32"},{"name":"cacheKey","in":"query","description":"Ключ кэша. Используется для обращения к кешированным данным и позволяет оптимизировать процесс получения информации за счет минимизации внутренних запросов сервера","required":false,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"$ref":"#/definitions/StatementResponse"}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":5,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/?number=<number1>,<number2>&dateFrom=30.09.2018Z&dateTo=30.10.2018&pageNo=1&pageRowCount=50&transactions=0&cacheKey=<cacheKey>' \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/?number=<number1>,<number2>&dateFrom=30.09.2018&dateTo=30.10.2018&pageNo=1&pageRowCount=50&transactions=0&cacheKey=<cacheKey>\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/',\r\n  qs:\r\n   { number: '<number1>,<number2>',\r\n     dateFrom: '30.09.2018',\r\n     dateTo: '30.10.2018',\r\n     pageNo: '1',\r\n     pageRowCount: '50',\r\n     transactions: '0',\r\n     cacheKey: '<cacheKey>' },\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/?number=<number1>,<number2>&dateFrom=30.09.2018&dateTo=30.10.2018&pageNo=1&pageRowCount=50&transactions=0&cacheKey=<cacheKey>\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/statement/{format}":{"get":{"tags":["accounts"],"summary":"Печатная форма выписки по счетам","description":"Возвращает печатную форму выписки по одному либо нескольким счетам","operationId":"printStatement","produces":["application/json;charset=UTF-8","application/octet-stream","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/pdf","text/plain","text/csv","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"format","in":"path","description":"Формат печатной формы (docx, pdf, txt, csv, xlsx)","required":true,"type":"string","pattern":"docx|pdf|txt|csv|xlsx"},{"name":"number","in":"query","description":"Номера счетов","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi","maxItems":50,"minItems":0},{"name":"dateFrom","in":"query","description":"Начальная дата периода (по умолчанию - (текущий день - месяц))","required":false,"type":"string","format":"date"},{"name":"dateTo","in":"query","description":"Конечная дата периода (по умолчанию - текущий день)","required":false,"type":"string","format":"date"},{"name":"transactions","in":"query","description":"Тип транзакции: 1 - операции зачисления (кредит), 2 - операции списания (дебет) (по умолчанию - 0 - все транзакции)","required":false,"type":"integer","format":"int32"},{"name":"withApplications","in":"query","description":"С приложениями/без приложений (по умолчанию - без)","required":false,"type":"boolean"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"type":"file"},"headers":{"Access-Control-Expose-Headers":{"type":"string","description":"Content-Disposition"},"Content-Disposition":{"type":"string","description":"attachment; filename=\"name\"; filename*=UTF-8''name"}}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":6,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/pdf?number=<number1>,<number2>&dateFrom=01.10.2018&dateTo=29.10.2018&transactions=0&withApplications=false' \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/pdf?number=<number1>,<number2>&dateFrom=01.10.2018&dateTo=29.10.2018&transactions=0&withApplications=false\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/pdf',\r\n  qs:\r\n   { number: '<number1>,<number2>',\r\n     dateFrom: '01.10.2018',\r\n     dateTo: '29.10.2018',\r\n     transactions: '0',\r\n     withApplications: 'false' },\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/statement/pdf?number=<number1>,<number2>&dateFrom=01.10.2018&dateTo=29.10.2018&transactions=0&withApplications=false\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/{number}":{"get":{"tags":["accounts"],"summary":"Детализированная информация по счету","description":"Возвращает детальную информацию по счету, включая данные об арестах, бронированиях и овердрафте","operationId":"getAccountDetails","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"number","in":"path","description":"Номер счета","required":true,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"$ref":"#/definitions/AccountDetailsResponse"}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":2,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number> \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>',\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/{number}/arrests":{"get":{"tags":["accounts"],"summary":"Информация по арестам","description":"Возвращает детальную информацию об арестах на счете","operationId":"getAccountArrests","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"number","in":"path","description":"Номер счета","required":true,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"$ref":"#/definitions/AccountArrestsResponse"}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":3,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/arrests \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/arrests\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/arrests',\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/arrests\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/{number}/reservations":{"get":{"tags":["accounts"],"summary":"Информация по броням","description":"Возвращает детальную информацию о бронированиях на счете","operationId":"getAccountReservations","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"number","in":"path","description":"Номер счета","required":true,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"$ref":"#/definitions/AccountReservationsResponse"}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":4,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/reservations \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/reservations\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/reservations',\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\",\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/reservations\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/{number}/statement":{"get":{"tags":["accounts"],"summary":"Выписка по счету","description":"Возвращает список транзакций по конкретному счету","operationId":"getOneStatement","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"number","in":"path","description":"Номер счета","required":true,"type":"string"},{"name":"pageNo","in":"query","description":"Номер страницы (по умолчанию - 1, все транзакции - 0)","required":false,"type":"integer","minimum":0,"format":"int32"},{"name":"pageRowCount","in":"query","description":"Число строк на странице (по умолчанию - 50, все транзакции - 0)","required":false,"type":"integer","minimum":0,"format":"int32"},{"name":"dateFrom","in":"query","description":"Начальная дата периода (по умолчанию - (текущий день - месяц))","required":false,"type":"string","format":"date"},{"name":"dateTo","in":"query","description":"Конечная дата периода (по умолчанию - текущий день)","required":false,"type":"string","format":"date"},{"name":"transactions","in":"query","description":"Тип транзакции: 1 - операции зачисления (кредит), 2 - операции списания (дебет) (по умолчанию - 0 - все транзакции)","required":false,"type":"integer","format":"int32"},{"name":"cacheKey","in":"query","description":"Ключ кэша. Используется для обращения к кешированным данным и позволяет оптимизировать процесс получения информации за счет минимизации внутренних запросов сервера","required":false,"type":"string"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"$ref":"#/definitions/OneStatementResponse"}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":7,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/?dateFrom=01.09.2018&dateTo=04.10.2018&pageNo=1&pageRowCount=50&transactions=0&cacheKey=<cacheKey>' \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/?dateFrom=01.09.2018&dateTo=04.10.2018&pageNo=1&pageRowCount=50&transactions=0&cacheKey=<cacheKey>\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/',\r\n  qs:\r\n   { dateFrom: '01.09.2018',\r\n     dateTo: '04.10.2018',\r\n     pageNo: '1',\r\n     pageRowCount: '50',\r\n     transactions: '0',\r\n     cacheKey: '<cacheKey>' },\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\",\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/?dateFrom=01.09.2018&dateTo=04.10.2018&pageNo=1&pageRowCount=50&transactions=0&cacheKey=<cacheKey>\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}},"/{number}/statement/{format}":{"get":{"tags":["accounts"],"summary":"Печатная форма выписки по счету","description":"Получение печатной формы выписки по конкретному счету","operationId":"printOneStatement","produces":["application/json;charset=UTF-8","application/octet-stream","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/pdf","text/plain","text/csv","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],"parameters":[{"name":"Authorization","in":"header","description":"Последний токен авторизации (Access Token). Формат передачи будет иметь вид Bearer + {пробел} + {accessToken}","required":true,"type":"string"},{"name":"number","in":"path","description":"Номер счета","required":true,"type":"string"},{"name":"format","in":"path","description":"Формат печатной формы (docx, pdf, txt, csv, xlsx)","required":true,"type":"string","pattern":"docx|pdf|txt|csv|xlsx"},{"name":"dateFrom","in":"query","description":"Начальная дата периода (по умолчанию - (текущий день - месяц))","required":false,"type":"string","format":"date"},{"name":"dateTo","in":"query","description":"Конечная дата периода (по умолчанию - текущий день)","required":false,"type":"string","format":"date"},{"name":"transactions","in":"query","description":"Тип транзакции: 1 - операции зачисления (кредит), 2 - операции списания (дебет) (по умолчанию - 0 - все транзакции)","required":false,"type":"integer","format":"int32"},{"name":"withApplications","in":"query","description":"С приложениями/без приложений (по умолчанию - без)","required":false,"type":"boolean"}],"responses":{"200":{"description":"Успешное выполнение запроса","schema":{"type":"file"},"headers":{"Access-Control-Expose-Headers":{"type":"string","description":"Content-Disposition"},"Content-Disposition":{"type":"string","description":"attachment; filename=\"name\"; filename*=UTF-8''name"}}},"400":{"description":"Некорректный запрос","schema":{"$ref":"#/definitions/ShortErrorModel"}},"401":{"description":"Запрос не авторизирован","schema":{"$ref":"#/definitions/ShortErrorModel"}},"500":{"description":"Ошибка выполнения запроса","schema":{"$ref":"#/definitions/ShortErrorModel"}}},"x-st-position":8,"x-st-code-samples":[{"lang":"cURL","sample":"curl -X GET \\\r\n  'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/pdf?dateFrom=01.10.2018&dateTo=29.10.2018&transactions=0&withApplications=false' \\\r\n  -H 'Authorization: Bearer <accessToken>'\r\n"},{"lang":"Java","sample":"OkHttpClient client = new OkHttpClient();\r\n\r\nRequest request = new Request.Builder()\r\n  .url(\"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/pdf?dateFrom=01.10.2018&dateTo=29.10.2018&transactions=0&withApplications=false\")\r\n  .get()\r\n  .addHeader(\"Authorization\", \"Bearer <accessToken>\")\r\n  .build();\r\n\r\nResponse response = client.newCall(request).execute();\r\n"},{"lang":"Node","sample":"var request = require(\"request\");\r\n\r\nvar options = { method: 'GET',\r\n  url: 'https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/pdf',\r\n  qs:\r\n   { dateFrom: '01.10.2018',\r\n     dateTo: '29.10.2018',\r\n     transactions: '0',\r\n     withApplications: 'false' },\r\n  headers:\r\n   { Authorization: 'Bearer <accessToken>' } };\r\n\r\nrequest(options, function (error, response, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n"},{"lang":"Swift","sample":"import Foundation\r\n\r\nlet headers = [\r\n  \"Authorization\": \"Bearer <accessToken>\"\r\n]\r\n\r\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://developerhub.alfabank.by:8273/partner/1.1.0/accounts/<number>/statement/pdf?dateFrom=01.10.2018&dateTo=29.10.2018&transactions=0&withApplications=false\")! as URL,\r\n                                        cachePolicy: .useProtocolCachePolicy,\r\n                                    timeoutInterval: 10.0)\r\nrequest.httpMethod = \"GET\"\r\nrequest.allHTTPHeaderFields = headers\r\n\r\nlet session = URLSession.shared\r\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\r\n  if (error != nil) {\r\n    print(error)\r\n  } else {\r\n    let httpResponse = response as? HTTPURLResponse\r\n    print(httpResponse)\r\n  }\r\n})\r\n\r\ndataTask.resume()\r\n"}],"x-scope":"accounts","x-auth-type":"Application & Application User","x-throttling-tier":"Unlimited","security":[{"default":["accounts"]}]}}},"definitions":{"Account":{"type":"object","properties":{"number":{"type":"string","description":"Номер счета"},"type":{"type":"string","description":"Тип счета"},"isCard":{"type":"boolean","description":"Признак карточного счета"},"currCode":{"type":"integer","format":"int32","description":"Код валюты (цифр.)"},"currIso":{"type":"string","description":"Код валюты (симв.)"},"amount":{"type":"number","description":"Остаток бухгалтерский"},"isOverdraft":{"type":"boolean","description":"Признак доступного остатка овердрафта"},"isReserved":{"type":"boolean","description":"Признак бронирования"},"isCatalog":{"type":"boolean","description":"Признак неоплаченного остатка картотеки"},"isArrested":{"type":"boolean","description":"Признак установленного ареста"},"actualBalanceDate":{"type":"string","format":"date-time","example":"2021-12-12T09:00:00.000","description":"Дата и время, на которую актуальны остатки"},"docAmount":{"type":"number","description":"Сумма документов в АИС ИДО"}},"description":"Счет"},"AccountArrest":{"type":"object","properties":{"arrestAmount":{"type":"number","description":"Сумма ареста"},"arrestInfo":{"type":"string","description":"Информация об аресте"},"date":{"type":"string","format":"date","example":"12.12.2021","description":"Дата ареста"}},"description":"Сведения об аресте"},"AccountArrestsResponse":{"type":"object","properties":{"totalType":{"type":"integer","format":"int32","description":"Тип ареста (общий)"},"totalTypeText":{"type":"string","description":"Информация об аресте (общая)"},"totalCount":{"type":"integer","format":"int32","description":"Количество арестов"},"totalAmount":{"type":"number","description":"Общая сумма арестов"},"currIso":{"type":"string","description":"Код валюты (симв.)"},"arrests":{"type":"array","description":"Список сведений об арестах","items":{"$ref":"#/definitions/AccountArrest"}}},"description":"Выходная модель, содержащая сведения об арестах"},"AccountDetails":{"type":"object","properties":{"number":{"type":"string","description":"Номер счета"},"type":{"type":"string","description":"Тип счета"},"isCard":{"type":"boolean","description":"Признак карточного счета"},"currCode":{"type":"integer","format":"int32","description":"Код валюты (цифр.)"},"currIso":{"type":"string","description":"Код валюты (симв.)"},"amount":{"type":"number","description":"Остаток бухгалтерский"},"amountAvailable":{"type":"number","description":"Остаток доступный"},"activeCards":{"type":"integer","format":"int32","description":"Количество карт со статусом \"Активная\""},"catalogAmountRest":{"type":"number","description":"Неоплаченный остаток картотеки"},"overdraftAmount":{"type":"number","description":"Доступный остаток овердрафта"},"overdraftLimit":{"type":"number","description":"Лимит овердрафта"},"reservedAmount":{"type":"number","description":"Остаток суммы бронирования по счету"},"arrestInfo":{"type":"string","description":"Информация об аресте (пример, \"Частичный на\")"},"arrestAmount":{"type":"number","description":"Сумма ареста (пример, 100.25)"},"actualBalanceDate":{"type":"string","format":"date-time","example":"2021-12-12T09:00:00.000","description":"Дата и время, на которую актуальны остатки"},"docAmount":{"type":"number","description":"Сумма документов в АИС ИДО"}},"description":"Детализированная информация по счету"},"AccountDetailsResponse":{"type":"object","properties":{"account":{"description":"Детализированная информация по счету","$ref":"#/definitions/AccountDetails"}},"description":"Выходная модель, содержащая детальную информацию по счету"},"AccountListResponse":{"type":"object","properties":{"accounts":{"type":"array","description":"Список счетов","items":{"$ref":"#/definitions/Account"}}},"description":"Выходная модель, содержащая список счетов"},"AccountReservation":{"type":"object","properties":{"type":{"type":"integer","format":"int32","description":"Тип бронирования"},"typeName":{"type":"string","description":"Наименование типа бронирования"},"reservedAmount":{"type":"number","description":"Сумма бронирования"},"reservedAmountRest":{"type":"number","description":"Остаток суммы бронирования"},"status":{"type":"integer","format":"int32","description":"Статус"},"statusName":{"type":"string","description":"Наименование статуса"},"beginDate":{"type":"string","format":"date","example":"12.12.2021","description":"Дата начала действия бронирования"},"endDate":{"type":"string","format":"date","example":"12.12.2021","description":"Дата окончания действия бронирования"}},"description":"Бронирование по счету"},"AccountReservationsResponse":{"type":"object","properties":{"totalCount":{"type":"integer","format":"int32","description":"Количество броней"},"totalAmount":{"type":"number","description":"Общая сумма броней"},"totalRest":{"type":"number","description":"Общая сумма остатка броней"},"currIso":{"type":"string","description":"Код валюты (симв.)"},"reservations":{"type":"array","description":"Список броней","items":{"$ref":"#/definitions/AccountReservation"}}},"description":"Выходная модель, содержащая информацию по броням"},"OneStatementResponse":{"type":"object","properties":{"statistics":{"description":"Статистика по счету","$ref":"#/definitions/StatementStatistics"},"totalRowCount":{"type":"integer","format":"int32","description":"Полное количество строк в выборке"},"cacheKey":{"type":"string","description":"Ключ кэша"},"page":{"type":"array","description":"Список строк на странице","items":{"$ref":"#/definitions/Statement"}}},"description":"Выходная модель, содержащая выписку по одному счету"},"ShortErrorModel":{"type":"object","properties":{"category":{"type":"string","description":"Категория ошибки","enum":["API_ERROR","BACK_ERROR"]},"code":{"type":"integer","format":"int32","description":"Код ошибки"},"message":{"type":"string","description":"Сообщение об ошибке"}}},"Statement":{"type":"object","properties":{"number":{"type":"string","description":"Номер счета"},"operType":{"type":"string","description":"Тип операции (D - дебет, C - кредит)"},"operCode":{"type":"integer","format":"int32","description":"Код вида операции"},"operCodeName":{"type":"string","description":"Наименование вида операции"},"operDate":{"type":"string","format":"date","example":"12.12.2021","description":"Дата исполнения документа"},"acceptDate":{"type":"string","format":"date-time","example":"2021-12-12T09:00:00.000","description":"Дата и время проведения операции"},"docId":{"type":"string","description":"Идентификатор документа"},"docNum":{"type":"string","description":"Номер документа"},"docType":{"type":"string","description":"Код типа документа"},"amount":{"type":"number","description":"Сумма"},"amountEq":{"type":"number","description":"Сумма эквивалент"},"currCode":{"type":"integer","format":"int32","description":"Код валюты (цифр.)"},"currIso":{"type":"string","description":"Код валюты (симв.)"},"purpose":{"type":"string","description":"Назначение"},"corrName":{"type":"string","description":"Наименование корреспондента"},"corrUnp":{"type":"string","description":"УНП корреспондента"},"corrNumber":{"type":"string","description":"Счет корреспондента"},"corrBic":{"type":"string","description":"Код банка корреспондента"},"corrBank":{"type":"string","description":"Наименование банка корреспондента"},"budgetCode":{"type":"string","description":"Код платежа в бюджет"},"printId":{"type":"string","description":"Идентификатор для печати приложения"},"unpThird":{"type":"string","description":"УНП третьего лица"},"realRate":{"type":"string","description":"Реальный курс"},"sumPaymentInstruction":{"type":"string","description":"Валюта платёжной инструкции"},"currPaymentInstruction":{"type":"string","description":"Идентификатор для печати приложения"}},"description":"Модель операции в выписке"},"StatementError":{"type":"object","properties":{"number":{"type":"string","description":"Номер счета, с которым связана ошибка"},"message":{"type":"string","description":"Текст ошибки"}},"description":"Модель ошибки получения выписки"},"StatementResponse":{"type":"object","properties":{"errors":{"type":"array","description":"Список ошибок получения выписки по счетам","items":{"$ref":"#/definitions/StatementError"}},"statistics":{"type":"array","description":"Статистика по счетам","items":{"$ref":"#/definitions/StatementStatistics"}},"totalRowCount":{"type":"integer","format":"int32","description":"Полное количество строк в выборке"},"cacheKey":{"type":"string","description":"Ключ кэша"},"page":{"type":"array","description":"Список строк на странице","items":{"$ref":"#/definitions/Statement"}}},"description":"Выходная модель, содержащая выписку"},"StatementStatistics":{"type":"object","properties":{"number":{"type":"string","description":"Номер счета"},"openingBalance":{"type":"number","description":"Входящий остаток в валюте счета"},"openingBalanceEq":{"type":"number","description":"Входящий остаток в эквиваленте"},"closingBalance":{"type":"number","description":"Исходящий остаток в валюте счета"},"closingBalanceEq":{"type":"number","description":"Исходящий остаток в эквиваленте"},"dbAmount":{"type":"number","description":"Обороты по дебету в валюте счета"},"dbAmountEq":{"type":"number","description":"Обороты по дебету в эквиваленте"},"crAmount":{"type":"number","description":"Обороты по кредиту в валюте счета"},"crAmountEq":{"type":"number","description":"Обороты по кредиту в эквиваленте"}},"description":"Модель статистики по счету"}},"x-wso2-security":{"apim":{"x-wso2-scopes":[{"name":"Получение информации по счетам","description":"","key":"accounts","roles":"partner_production_info,partner_production_personal"}]}},"x-version-info":{"description":[{"point":"В методы 'Выписка по счету' и 'Выписка по счетам' добавлены новые параметры: -'unpThirdPerson' (УНП 3-го лица), 'realRate', 'sumPaymentInstruction', 'currPaymentInstruction' (реальный курс, сумма и валюта совершённой операции)."}],"title":"Что нового в версии 1.1.0"},"host":"ibapi2.alfabank.by:8273","basePath":"/partner/1.1.0/accounts","schemes":["https","http"],"securityDefinitions":{"default":{"type":"oauth2","authorizationUrl":"https://ibapi2.alfabank.by:8273/authorize","flow":"implicit","scopes":{"accounts":"Получение информации по счетам"}}}}